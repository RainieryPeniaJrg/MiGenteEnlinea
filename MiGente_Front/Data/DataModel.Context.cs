//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiGente_Front.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class migenteEntities : DbContext
    {
        public migenteEntities()
            : base("name=migenteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Config_Correo> Config_Correo { get; set; }
        public virtual DbSet<Credenciales> Credenciales { get; set; }
        public virtual DbSet<Suscripciones> Suscripciones { get; set; }
        public virtual DbSet<Planes_empleadores> Planes_empleadores { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<perfilesInfo> perfilesInfo { get; set; }
        public virtual DbSet<VPerfiles> VPerfiles { get; set; }
        public virtual DbSet<Ventas> Ventas { get; set; }
        public virtual DbSet<Planes_Contratistas> Planes_Contratistas { get; set; }
        public virtual DbSet<PaymentGateway> PaymentGateway { get; set; }
        public virtual DbSet<Cuentas> Cuentas { get; set; }
        public virtual DbSet<Empleados> Empleados { get; set; }
        public virtual DbSet<Empleador_Recibos_Detalle> Empleador_Recibos_Detalle { get; set; }
        public virtual DbSet<Empleador_Recibos_Header> Empleador_Recibos_Header { get; set; }
        public virtual DbSet<Remuneraciones> Remuneraciones { get; set; }
        public virtual DbSet<Empleador_Recibos_Detalle_Contrataciones> Empleador_Recibos_Detalle_Contrataciones { get; set; }
        public virtual DbSet<Empleador_Recibos_Header_Contrataciones> Empleador_Recibos_Header_Contrataciones { get; set; }
        public virtual DbSet<EmpleadosTemporales> EmpleadosTemporales { get; set; }
        public virtual DbSet<Provincias> Provincias { get; set; }
        public virtual DbSet<Deducciones_TSS> Deducciones_TSS { get; set; }
        public virtual DbSet<VRecibosEmpleados> VRecibosEmpleados { get; set; }
        public virtual DbSet<DetalleContrataciones> DetalleContrataciones { get; set; }
        public virtual DbSet<Calificaciones> Calificaciones { get; set; }
        public virtual DbSet<VContratacionesTemporales> VContratacionesTemporales { get; set; }
        public virtual DbSet<VPagosContrataciones> VPagosContrataciones { get; set; }
        public virtual DbSet<VCalificaciones> VCalificaciones { get; set; }
        public virtual DbSet<VEmpleados> VEmpleados { get; set; }
        public virtual DbSet<Contratistas> Contratistas { get; set; }
        public virtual DbSet<VContratistas> VContratistas { get; set; }
        public virtual DbSet<Contratistas_Fotos> Contratistas_Fotos { get; set; }
        public virtual DbSet<Contratistas_Servicios> Contratistas_Servicios { get; set; }
        public virtual DbSet<Ofertantes> Ofertantes { get; set; }
        public virtual DbSet<Sectores> Sectores { get; set; }
        public virtual DbSet<Servicios> Servicios { get; set; }
        public virtual DbSet<VMisCalificaciones> VMisCalificaciones { get; set; }
        public virtual DbSet<OpenAi_Config> OpenAi_Config { get; set; }
    
        public virtual ObjectResult<ObtenerSuscripcion_Result> ObtenerSuscripcion(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerSuscripcion_Result>("ObtenerSuscripcion", userIDParameter);
        }
    
        public virtual ObjectResult<sp_MisCalificaciones_Result> sp_MisCalificaciones(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MisCalificaciones_Result>("sp_MisCalificaciones", identificacionParameter);
        }
    }
}
