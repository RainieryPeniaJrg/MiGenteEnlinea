@model MiGenteEnLinea.Web.Controllers.SubscriptionController.MiSuscripcionViewModel
@{
    ViewData["Title"] = "Mi Suscripción";
    Layout = "_Layout";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0" style="color:white">Gestión de Suscripción</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="txtPlanActual" class="form-label">Plan Actual</label>
                        <input type="text" class="form-control" id="txtPlanActual" value="@Model.PlanActual" readonly />
                    </div>
                    <div class="mb-3">
                        <label for="txtFechaInicio" class="form-label">Fecha de Inicio</label>
                        <input type="text" class="form-control" id="txtFechaInicio" value="@Model.FechaInicio.ToString("MMM-dd-yyyy")" readonly />
                    </div>
                    @if (Model.ProximoPago.HasValue)
                    {
                        <div class="mb-3" id="proxPago">
                            <label for="txtProximoPago" class="form-label">Próximo Pago</label>
                            <input type="text" class="form-control" id="txtProximoPago" value="@Model.ProximoPago.Value.ToString("MMM-dd-yyyy")" readonly />
                        </div>
                    }
                    
                    <div class="mb-3" style="margin-block:10px">
                        <button type="button" class="btn btn-danger col-md-5 col-12" id="btnCancelar">Cancelar Suscripción</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-2">
    <h5>Histórico de Facturación</h5>
</div>

<div class="container mt-2">
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Fecha</th>
                    <th>Plan</th>
                    <th>Precio</th>
                    <th>Tarjeta</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.HistoricoFacturacion != null && Model.HistoricoFacturacion.Any())
                {
                    @foreach (var factura in Model.HistoricoFacturacion)
                    {
                        <tr>
                            <td>@factura.Fecha.ToString("dd/MM/yyyy")</td>
                            <td>@factura.NombrePlan</td>
                            <td>$@factura.Precio.ToString("N2")</td>
                            <td>@factura.Tarjeta</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center text-muted">No hay facturas registradas</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('btnCancelar').addEventListener('click', async function() {
        const result = await Swal.fire({
            title: '¿Está seguro?',
            text: "Esta acción cancelará su suscripción activa",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, cancelar suscripción',
            cancelButtonText: 'No, mantener suscripción'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch('@Url.Action("CancelarSuscripcion", "Subscription")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    }
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: 'Cancelada!',
                        text: data.message,
                        icon: 'success'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire('Error', 'No se pudo procesar la solicitud', 'error');
            }
        }
    });
</script>
}
