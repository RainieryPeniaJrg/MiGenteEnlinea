@model MiGenteEnLinea.Web.Controllers.EmpleadorController.FichaColaboradorTemporalViewModel
@{
    ViewData["Title"] = "Gestión de Contratista";
    var contratacionID = ViewBag.ContratacionID;
}

<!-- Breadcrumb -->
<div class="pagetitle">
    <h1>Gestión de Contratista</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Colaboradores", "Empleador")">Colaboradores</a></li>
            <li class="breadcrumb-item active">Ficha de Contratación Temporal</li>
        </ol>
    </nav>
</div>

<div class="bg-white pt-5 pb-5">
    <div class="container">
        <h2 class="text-gray" id="nombreColaborador">@Model.NombreCompleto</h2>
    </div>

    <div class="container">
        <!-- Card: Información del Colaborador -->
        <div class="row">
            <div class="col-md-12 mt-1">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="bi bi-person-badge me-2"></i>Información del Colaborador
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <!-- Columna 1 -->
                            <div class="col-md-3">
                                <p><strong>Fecha de Registro:</strong></p>
                                <p class="text-muted">@Model.FechaRegistro.ToString("dd/MM/yyyy")</p>

                                <p><strong>Tipo:</strong></p>
                                <p class="text-muted">@(Model.Tipo == 1 ? "Persona Física" : "Empresa")</p>

                                <p><strong>Identificación:</strong></p>
                                <p class="text-muted">@(Model.Tipo == 1 ? Model.Identificacion : Model.RNC)</p>

                                <p><strong>Nombre:</strong></p>
                                <p class="text-muted">@Model.NombreCompleto</p>
                            </div>

                            <!-- Columna 2 -->
                            <div class="col-md-3">
                                <p><strong>Dirección:</strong></p>
                                <p class="text-muted">@Model.Direccion</p>

                                <p><strong>Provincia:</strong></p>
                                <p class="text-muted">@Model.Provincia</p>

                                <p><strong>Municipio:</strong></p>
                                <p class="text-muted">@Model.Municipio</p>
                            </div>

                            <!-- Columna 3 -->
                            <div class="col-md-3">
                                <p><strong>Teléfono 1:</strong></p>
                                <p class="text-muted">@Model.Telefono1</p>

                                <p><strong>Teléfono 2:</strong></p>
                                <p class="text-muted">@(Model.Telefono2 ?? "N/A")</p>

                                @if (Model.Tipo == 2)
                                {
                                    <p><strong>Representante Legal:</strong></p>
                                    <p class="text-muted">@Model.NombreRepresentante</p>

                                    <p><strong>Cédula Representante:</strong></p>
                                    <p class="text-muted">@Model.CedulaRepresentante</p>
                                }
                            </div>

                            <!-- Columna 4: Foto -->
                            <div class="col-md-3 text-center">
                                @if (!string.IsNullOrEmpty(Model.Foto))
                                {
                                    <img src="@Model.Foto" alt="Foto Colaborador" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
                                }
                                else
                                {
                                    <div class="text-muted">
                                        <i class="bi bi-person-circle" style="font-size: 100px;"></i>
                                        <p>Sin foto</p>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Botones de Acción -->
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#modalEditarColaborador">
                                    <i class="bi bi-pencil-square me-2"></i>Editar Perfil
                                </button>
                                <button type="button" class="btn btn-danger me-2" onclick="confirmarEliminar()">
                                    <i class="bi bi-trash me-2"></i>Eliminar Colaborador
                                </button>
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalNuevaTrabajo">
                                    <i class="bi bi-plus-circle me-2"></i>Nueva Contratación
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabs: Trabajos Activos / Historial -->
            <div class="col-md-12 mt-3">
                <ul class="nav nav-tabs" id="tabsTrabajos" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="trabajosActivos-tab" data-bs-toggle="tab" 
                                data-bs-target="#trabajosActivos" type="button" role="tab" 
                                aria-controls="trabajosActivos" aria-selected="true">
                            <i class="bi bi-clipboard-check me-2"></i>Trabajos En Curso
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="historial-tab" data-bs-toggle="tab" 
                                data-bs-target="#historial" type="button" role="tab" 
                                aria-controls="historial" aria-selected="false">
                            <i class="bi bi-clock-history me-2"></i>Historial
                        </button>
                    </li>
                </ul>

                <div class="tab-content mt-3" id="tabContentTrabajos">
                    <!-- Tab: Trabajos Activos -->
                    <div class="tab-pane fade show active" id="trabajosActivos" role="tabpanel" aria-labelledby="trabajosActivos-tab">
                        <div class="card shadow-sm">
                            <div class="card-header bg-success text-white">
                                <h5 class="mb-0">Listado de Trabajos en Curso</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover" id="tablaTrabajosActivos">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Descripción</th>
                                                <th>Fecha Inicio</th>
                                                <th>Fecha Final</th>
                                                <th>Monto Acordado</th>
                                                <th>Esquema de Pagos</th>
                                                <th>Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Se llenará con JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Tab: Historial -->
                    <div class="tab-pane fade" id="historial" role="tabpanel" aria-labelledby="historial-tab">
                        <div class="card shadow-sm">
                            <div class="card-header bg-secondary text-white">
                                <h5 class="mb-0">Histórico de Trabajos Contratados</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover" id="tablaHistorial">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Detalle ID</th>
                                                <th>Descripción</th>
                                                <th>Fecha Inicio</th>
                                                <th>Fecha Final</th>
                                                <th>Monto Acordado</th>
                                                <th>Esquema de Pagos</th>
                                                <th>Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Se llenará con JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal: Nueva Contratación -->
<div class="modal fade" id="modalNuevaTrabajo" tabindex="-1" aria-labelledby="modalNuevaTrabajoLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalNuevaTrabajoLabel">
                    <i class="bi bi-plus-circle me-2"></i>Crear Nueva Contratación
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formNuevaContratacion">
                    <h6 class="text-primary mb-3">Detalles de Contratación</h6>

                    <!-- Descripción Corta -->
                    <div class="mb-3">
                        <label for="descripcionCorta" class="form-label fw-bold">Descripción Corta <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="descripcionCorta" maxlength="60" required>
                        <div class="form-text">Máximo 60 caracteres</div>
                    </div>

                    <!-- Descripción Ampliada -->
                    <div class="mb-3">
                        <label for="descripcionAmpliada" class="form-label fw-bold">Descripción Ampliada</label>
                        <textarea class="form-control" id="descripcionAmpliada" rows="3" maxlength="250"></textarea>
                        <div class="form-text">Máximo 250 caracteres</div>
                    </div>

                    <!-- Fechas -->
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="fechaInicio" class="form-label fw-bold">Fecha de Inicio <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="fechaInicio" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="fechaConclusion" class="form-label fw-bold">Fecha de Conclusión Esperada <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="fechaConclusion" required>
                        </div>
                    </div>

                    <!-- Monto Acordado -->
                    <div class="mb-3">
                        <label for="montoAcordado" class="form-label fw-bold">Monto Total Acordado <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">RD$</span>
                            <input type="number" class="form-control" id="montoAcordado" step="0.01" min="0" required>
                        </div>
                    </div>

                    <!-- Esquema de Pagos -->
                    <div class="mb-3">
                        <label for="esquemaPagos" class="form-label fw-bold">Esquema de Pagos <span class="text-danger">*</span></label>
                        <select class="form-select" id="esquemaPagos" required>
                            <option value="1">100% Contra Entrega</option>
                            <option value="2" selected>50% Avance / 50% Finalizado</option>
                            <option value="3">30% Avance / 70% Finalizado</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-2"></i>Cancelar
                </button>
                <button type="button" class="btn btn-primary" onclick="guardarNuevaContratacion()">
                    <i class="bi bi-save me-2"></i>Guardar Contratación
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal: Editar Colaborador (Placeholder - implementar después) -->
<div class="modal fade" id="modalEditarColaborador" tabindex="-1" aria-labelledby="modalEditarColaboradorLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalEditarColaboradorLabel">
                    <i class="bi bi-pencil-square me-2"></i>Editar Perfil de Colaborador
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="text-muted">Funcionalidad de edición de perfil pendiente de implementación.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const contratacionID = @contratacionID;

        $(document).ready(function () {
            cargarTrabajosActivos();
            cargarHistorial();
        });

        // ========== CARGAR TRABAJOS ACTIVOS ==========
        function cargarTrabajosActivos() {
            $.ajax({
                url: '/Empleador/GetTrabajosContratacion',
                type: 'GET',
                data: { contratacionID: contratacionID, estatus: 1 },
                success: function (response) {
                    if (response.success && response.data) {
                        renderizarTrabajos(response.data, '#tablaTrabajosActivos tbody');
                    } else {
                        mostrarError(response.message || 'Error al cargar trabajos activos');
                    }
                },
                error: function () {
                    mostrarError('Error de conexión al cargar trabajos');
                }
            });
        }

        // ========== CARGAR HISTORIAL ==========
        function cargarHistorial() {
            $.ajax({
                url: '/Empleador/GetTrabajosContratacion',
                type: 'GET',
                data: { contratacionID: contratacionID, estatus: 2 },
                success: function (response) {
                    if (response.success && response.data) {
                        renderizarTrabajos(response.data, '#tablaHistorial tbody', true);
                    } else {
                        mostrarError(response.message || 'Error al cargar historial');
                    }
                },
                error: function () {
                    mostrarError('Error de conexión al cargar historial');
                }
            });
        }

        // ========== RENDERIZAR TRABAJOS EN TABLA ==========
        function renderizarTrabajos(trabajos, selector, mostrarDetalleID = false) {
            const tbody = $(selector);
            tbody.empty();

            if (!trabajos || trabajos.length === 0) {
                tbody.append(`
                    <tr>
                        <td colspan="${mostrarDetalleID ? '7' : '6'}" class="text-center text-muted">
                            No hay trabajos registrados
                        </td>
                    </tr>
                `);
                return;
            }

            trabajos.forEach(trabajo => {
                const esquema = getEsquemaPagosTexto(trabajo.esquemaPagos);
                const row = `
                    <tr>
                        ${mostrarDetalleID ? `<td>${trabajo.detalleID}</td>` : ''}
                        <td>${trabajo.descripcionCorta}</td>
                        <td>${formatearFecha(trabajo.fechaInicio)}</td>
                        <td>${formatearFecha(trabajo.fechaFinal)}</td>
                        <td>RD$ ${formatearMonto(trabajo.montoAcordado)}</td>
                        <td><span class="badge bg-info">${esquema}</span></td>
                        <td>
                            <button class="btn btn-sm btn-warning" onclick="verDetalleTrabajo(${trabajo.contratacionID}, ${trabajo.detalleID})">
                                <i class="bi bi-eye me-1"></i>Detalles
                            </button>
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }

        // ========== VER DETALLE DE TRABAJO ==========
        function verDetalleTrabajo(contratacionID, detalleID) {
            window.location.href = `/Empleador/DetalleContratacion?contratacionID=${contratacionID}&detalleID=${detalleID}`;
        }

        // ========== GUARDAR NUEVA CONTRATACIÓN ==========
        function guardarNuevaContratacion() {
            const form = $('#formNuevaContratacion')[0];
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const request = {
                contratacionID: contratacionID,
                descripcionCorta: $('#descripcionCorta').val(),
                descripcionAmpliada: $('#descripcionAmpliada').val(),
                fechaInicio: $('#fechaInicio').val(),
                fechaConclusion: $('#fechaConclusion').val(),
                montoAcordado: parseFloat($('#montoAcordado').val()),
                esquemaPagos: $('#esquemaPagos').val()
            };

            $.ajax({
                url: '/Empleador/NuevaContratacion',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(request),
                success: function (response) {
                    if (response.success) {
                        $('#modalNuevaTrabajo').modal('hide');
                        mostrarExito('Contratación creada correctamente');
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        mostrarError(response.message || 'Error al crear contratación');
                    }
                },
                error: function () {
                    mostrarError('Error de conexión');
                }
            });
        }

        // ========== ELIMINAR COLABORADOR ==========
        function confirmarEliminar() {
            Swal.fire({
                title: '¿Estás seguro?',
                text: '¿Deseas eliminar este colaborador y toda la información asociada?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, Eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    eliminarColaborador();
                }
            });
        }

        function eliminarColaborador() {
            $.ajax({
                url: '/Empleador/EliminarColaborador',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ contratacionID: contratacionID }),
                success: function (response) {
                    if (response.success) {
                        mostrarExito('Colaborador eliminado correctamente');
                        setTimeout(() => {
                            window.location.href = '/Empleador/Colaboradores';
                        }, 1500);
                    } else {
                        mostrarError(response.message || 'Error al eliminar colaborador');
                    }
                },
                error: function () {
                    mostrarError('Error de conexión');
                }
            });
        }

        // ========== UTILIDADES ==========
        function getEsquemaPagosTexto(esquema) {
            switch (esquema.toString()) {
                case '1': return '100% Contra Entrega';
                case '2': return '50% Avance / 50% Finalizado';
                case '3': return '30% Avance / 70% Finalizado';
                default: return 'Desconocido';
            }
        }

        function formatearFecha(fecha) {
            if (!fecha) return 'N/A';
            const d = new Date(fecha);
            return `${d.getDate().toString().padStart(2, '0')}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d.getFullYear()}`;
        }

        function formatearMonto(monto) {
            return parseFloat(monto).toLocaleString('es-DO', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }

        function mostrarExito(mensaje) {
            Swal.fire({
                title: 'Éxito',
                text: mensaje,
                icon: 'success',
                confirmButtonText: 'Aceptar'
            });
        }

        function mostrarError(mensaje) {
            Swal.fire({
                title: 'Error',
                text: mensaje,
                icon: 'error',
                confirmButtonText: 'Aceptar'
            });
        }
    </script>
}
