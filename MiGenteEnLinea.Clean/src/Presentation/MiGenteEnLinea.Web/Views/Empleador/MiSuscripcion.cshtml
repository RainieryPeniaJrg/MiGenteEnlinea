@model MiGenteEnLinea.Web.Controllers.EmpleadorController.MiSuscripcionViewModel
@{
    ViewData["Title"] = "Mi Suscripción";
    Layout = "~/Views/Shared/_LayoutEmpleador.cshtml";
}

<!-- Breadcrumb -->
<div class="pagetitle">
    <h1>Gestión de Suscripción</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Empleador/Colaboradores">Inicio</a></li>
            <li class="breadcrumb-item active">Mi Suscripción</li>
        </ol>
    </nav>
</div>

<section class="section">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0" style="color: white;">Gestión de Suscripción</h5>
                </div>
                <div class="card-body">
                    @if (Model?.Suscripcion != null)
                    {
                        <div class="mb-3">
                            <label class="form-label fw-bold">Plan Actual</label>
                            <input type="text" class="form-control" value="@Model.Suscripcion.NombrePlan" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">Fecha de Inicio</label>
                            <input type="text" class="form-control" value="@Model.Suscripcion.FechaInicio.ToString("MMM-dd-yyyy")" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">Próximo Pago</label>
                            <input type="text" class="form-control" value="@Model.Suscripcion.ProximoPago.ToString("MMM-dd-yyyy")" readonly />
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">Estado</label>
                            <input type="text" class="form-control" value="@(Model.Suscripcion.EstaActiva ? "Activa" : "Inactiva")" readonly />
                        </div>

                        <div class="mb-3">
                            <button type="button" class="btn btn-danger col-md-5 col-12" onclick="cancelarSuscripcion()">
                                <i class="bi bi-x-circle"></i> Cancelar Suscripción
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning" role="alert">
                            <i class="bi bi-exclamation-triangle"></i>
                            No tienes una suscripción activa. <a href="/Empleador/AdquirirPlan" class="alert-link">Adquiere un plan aquí</a>.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Historial de Facturación -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0" style="color: white;">Histórico de Facturación</h5>
                </div>
                <div class="card-body">
                    @if (Model?.Ventas != null && Model.Ventas.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="tablaHistorial">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Fecha</th>
                                        <th>ID Transacción</th>
                                        <th>Plan</th>
                                        <th>Precio</th>
                                        <th>Tarjeta</th>
                                        <th>Estado</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var venta in Model.Ventas)
                                    {
                                        <tr>
                                            <td>@venta.Fecha.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td><span class="badge bg-info">@venta.IdTransaccion</span></td>
                                            <td>@venta.NombrePlan</td>
                                            <td class="fw-bold text-success">RD$@venta.Precio.ToString("N2")</td>
                                            <td>
                                                <i class="bi bi-credit-card"></i> @venta.TarjetaEnmascarada
                                            </td>
                                            <td>
                                                <span class="badge bg-success">
                                                    <i class="bi bi-check-circle"></i> Completado
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-light">
                                        <td colspan="3" class="text-end fw-bold">Total Gastado:</td>
                                        <td class="fw-bold text-success">RD$@Model.Ventas.Sum(v => v.Precio).ToString("N2")</td>
                                        <td colspan="2"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info" role="alert">
                            <i class="bi bi-info-circle"></i>
                            No hay historial de facturación disponible.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    <style>
        .card {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .card-header {
            border-radius: 8px 8px 0 0;
        }

        .form-control[readonly] {
            background-color: #f8f9fa;
            cursor: not-allowed;
        }

        .table-responsive {
            border-radius: 8px;
        }

        .badge {
            padding: 6px 12px;
            font-size: 0.9em;
        }

        #tablaHistorial tbody tr {
            transition: background-color 0.2s;
        }

        #tablaHistorial tbody tr:hover {
            background-color: rgba(13, 110, 253, 0.05);
        }
    </style>
}

@section Scripts {
    <script>
        function cancelarSuscripcion() {
            Swal.fire({
                icon: 'warning',
                title: '¿Cancelar Suscripción?',
                text: 'Esta acción cancelará tu suscripción actual. ¿Estás seguro?',
                showCancelButton: true,
                confirmButtonText: 'Sí, cancelar',
                cancelButtonText: 'No, mantener',
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/Empleador/CancelarSuscripcion', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const data = await response.json();

                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Suscripción Cancelada',
                                text: 'Tu suscripción ha sido cancelada exitosamente.',
                                confirmButtonText: 'Aceptar'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message || 'No se pudo cancelar la suscripción.',
                            });
                        }
                    } catch (error) {
                        console.error('Error al cancelar suscripción:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error de Conexión',
                            text: 'No se pudo conectar con el servidor.',
                        });
                    }
                }
            });
        }

        // Inicializar DataTables si está disponible
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof $ !== 'undefined' && $.fn.DataTable) {
                $('#tablaHistorial').DataTable({
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/es-ES.json'
                    },
                    order: [[0, 'desc']], // Ordenar por fecha descendente
                    pageLength: 10,
                    responsive: true
                });
            }
        });
    </script>
}
