// <auto-generated />
using System;
using MiGenteEnLinea.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiGenteEnLinea.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(MiGenteDbContext))]
    [Migration("20251024231511_ConfigurePersonalPC_IgnoreLegacyEntities")]
    partial class ConfigurePersonalPC_IgnoreLegacyEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Authentication.Credencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaActivacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_activacion");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("UltimaIp")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ultima_ip");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2")
                        .HasColumnName("ultimo_acceso");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Credenciales_Activo");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Credenciales_Email");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("IX_Credenciales_UserID");

                    b.ToTable("Credenciales", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Calificaciones.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("calificacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Conocimientos")
                        .HasColumnType("int")
                        .HasColumnName("conocimientos");

                    b.Property<string>("ContratistaIdentificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("ContratistaNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cumplimiento")
                        .HasColumnType("int")
                        .HasColumnName("cumplimiento");

                    b.Property<string>("EmpleadorUserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("Puntualidad")
                        .HasColumnType("int")
                        .HasColumnName("puntualidad");

                    b.Property<int>("Recomendacion")
                        .HasColumnType("int")
                        .HasColumnName("recomendacion");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tipo");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContratistaIdentificacion")
                        .HasDatabaseName("IX_Calificaciones_ContratistaIdentificacion");

                    b.HasIndex("EmpleadorUserId")
                        .HasDatabaseName("IX_Calificaciones_EmpleadorUserId");

                    b.HasIndex("Fecha")
                        .HasDatabaseName("IX_Calificaciones_Fecha");

                    b.HasIndex("Tipo")
                        .HasDatabaseName("IX_Calificaciones_Tipo");

                    b.HasIndex("ContratistaIdentificacion", "Fecha")
                        .HasDatabaseName("IX_Calificaciones_Contratista_Fecha");

                    b.HasIndex("EmpleadorUserId", "Fecha")
                        .HasDatabaseName("IX_Calificaciones_Empleador_Fecha");

                    b.ToTable("Calificaciones", null, t =>
                        {
                            t.HasCheckConstraint("CK_Calificaciones_Conocimientos_Rango", "conocimientos >= 1 AND conocimientos <= 5");

                            t.HasCheckConstraint("CK_Calificaciones_Cumplimiento_Rango", "cumplimiento >= 1 AND cumplimiento <= 5");

                            t.HasCheckConstraint("CK_Calificaciones_Puntualidad_Rango", "puntualidad >= 1 AND puntualidad <= 5");

                            t.HasCheckConstraint("CK_Calificaciones_Recomendacion_Rango", "recomendacion >= 1 AND recomendacion <= 5");
                        });
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Catalogos.Provincia", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("provinciaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinciaId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("created_by");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("updated_by");

                    b.HasKey("ProvinciaId");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UX_Provincias_Nombre");

                    b.ToTable("Provincias", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Catalogos.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sectorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectorId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Grupo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("grupo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("sector");

                    b.Property<int>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(999)
                        .HasColumnName("orden");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("updated_by");

                    b.HasKey("SectorId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Sectores_Activo");

                    b.HasIndex("Codigo")
                        .HasDatabaseName("IX_Sectores_Codigo");

                    b.HasIndex("Nombre")
                        .HasDatabaseName("IX_Sectores_Nombre");

                    b.HasIndex("Grupo", "Orden")
                        .HasDatabaseName("IX_Sectores_Grupo_Orden");

                    b.ToTable("Sectores", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Catalogos.Servicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("servicioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicioId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Categoria")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("categoria");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icono");

                    b.Property<int>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(999)
                        .HasColumnName("orden");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("ServicioId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Servicios_Activo");

                    b.HasIndex("Descripcion")
                        .HasDatabaseName("IX_Servicios_Descripcion");

                    b.HasIndex("Categoria", "Orden")
                        .HasDatabaseName("IX_Servicios_Categoria_Orden");

                    b.ToTable("Servicios", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Configuracion.ConfigCorreo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("email");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pass");

                    b.Property<int>("Puerto")
                        .HasColumnType("int")
                        .HasColumnName("puerto");

                    b.Property<string>("Servidor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("servidor");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_ConfigCorreo_Email");

                    b.HasIndex("Servidor")
                        .HasDatabaseName("IX_ConfigCorreo_Servidor");

                    b.ToTable("Config_Correo", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Configuracion.OpenAiConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OpenAIApiKey")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OpenAIApiKey");

                    b.Property<string>("OpenAIApiUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OpenAIApiUrl");

                    b.HasKey("Id");

                    b.ToTable("OpenAi_Config", null, t =>
                        {
                            t.HasComment("Configuración del bot OpenAI para el 'abogado virtual'. ⚠️ Contiene información sensible.");
                        });
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contrataciones.DetalleContratacion", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detalleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int?>("CalificacionId")
                        .HasColumnType("int")
                        .HasColumnName("calificacionID");

                    b.Property<bool>("Calificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("calificado");

                    b.Property<int?>("ContratacionId")
                        .HasColumnType("int")
                        .HasColumnName("contratacionID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("DescripcionAmpliada")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcionAmpliada");

                    b.Property<string>("DescripcionCorta")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("descripcionCorta");

                    b.Property<string>("EsquemaPagos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("esquemaPagos");

                    b.Property<int>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus");

                    b.Property<DateOnly>("FechaFinal")
                        .HasColumnType("date")
                        .HasColumnName("fechaFinal");

                    b.Property<DateTime?>("FechaFinalizacionReal")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_finalizacion_real");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaInicio");

                    b.Property<DateTime?>("FechaInicioReal")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio_real");

                    b.Property<decimal>("MontoAcordado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoAcordado");

                    b.Property<string>("MotivoCancelacion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("motivo_cancelacion");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("notas");

                    b.Property<int>("PorcentajeAvance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("porcentaje_avance");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("updated_by");

                    b.HasKey("DetalleId");

                    b.HasIndex("CalificacionId")
                        .HasDatabaseName("IX_DetalleContrataciones_CalificacionId");

                    b.HasIndex("Calificado")
                        .HasDatabaseName("IX_DetalleContrataciones_Calificado");

                    b.HasIndex("ContratacionId")
                        .HasDatabaseName("IX_DetalleContrataciones_ContratacionId");

                    b.HasIndex("Estatus")
                        .HasDatabaseName("IX_DetalleContrataciones_Estatus");

                    b.HasIndex("Estatus", "Calificado")
                        .HasDatabaseName("IX_DetalleContrataciones_Estatus_Calificado");

                    b.HasIndex("Estatus", "FechaInicio")
                        .HasDatabaseName("IX_DetalleContrataciones_Estatus_FechaInicio");

                    b.HasIndex("FechaInicio", "FechaFinal")
                        .HasDatabaseName("IX_DetalleContrataciones_Fechas");

                    b.ToTable("Detalle_Contrataciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contratistas.Contratista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contratistaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Apellido");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by");

                    b.Property<int?>("Experiencia")
                        .HasColumnType("int")
                        .HasColumnName("experiencia");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaIngreso");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("imagenURL");

                    b.Property<bool>("NivelNacional")
                        .HasColumnType("bit")
                        .HasColumnName("nivelNacional");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("presentacion");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("Sector")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("sector");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<string>("Titulo")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("titulo");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.Property<bool>("Whatsapp1")
                        .HasColumnType("bit")
                        .HasColumnName("whatsapp1");

                    b.Property<bool>("Whatsapp2")
                        .HasColumnType("bit")
                        .HasColumnName("whatsapp2");

                    b.Property<string>("_email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.HasKey("Id");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Contratistas_Activo");

                    b.HasIndex("FechaIngreso")
                        .HasDatabaseName("IX_Contratistas_FechaIngreso");

                    b.HasIndex("Provincia")
                        .HasDatabaseName("IX_Contratistas_Provincia");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("IX_Contratistas_UserID");

                    b.HasIndex("Sector", "Provincia")
                        .HasDatabaseName("IX_Contratistas_Sector_Provincia");

                    b.ToTable("Contratistas", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contratistas.ContratistaFoto", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("imagenID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagenId"));

                    b.Property<bool>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activa");

                    b.Property<int>("ContratistaId")
                        .HasColumnType("int")
                        .HasColumnName("contratistaID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("EsPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("es_principal");

                    b.Property<DateTime?>("FechaTrabajo")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_trabajo");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("imagenURL");

                    b.Property<int>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(999)
                        .HasColumnName("orden");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tags");

                    b.Property<string>("TipoFoto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_foto");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("updated_by");

                    b.HasKey("ImagenId");

                    b.HasIndex("Activa")
                        .HasDatabaseName("IX_ContratistasFotos_Activa");

                    b.HasIndex("ContratistaId")
                        .HasDatabaseName("IX_ContratistasFotos_ContratistaId");

                    b.HasIndex("EsPrincipal")
                        .HasDatabaseName("IX_ContratistasFotos_EsPrincipal");

                    b.HasIndex("ContratistaId", "EsPrincipal")
                        .IsUnique()
                        .HasDatabaseName("IX_ContratistasFotos_Contratista_Principal")
                        .HasFilter("[es_principal] = 1");

                    b.HasIndex("ContratistaId", "Activa", "Orden")
                        .HasDatabaseName("IX_ContratistasFotos_Contratista_Activa_Orden");

                    b.ToTable("Contratistas_Fotos", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contratistas.ContratistaServicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("servicioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicioId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<int?>("AniosExperiencia")
                        .HasColumnType("int")
                        .HasColumnName("anios_experiencia");

                    b.Property<string>("Certificaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("certificaciones");

                    b.Property<int>("ContratistaId")
                        .HasColumnType("int")
                        .HasColumnName("contratistaID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("DetalleServicio")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("detalleServicio");

                    b.Property<int>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(999)
                        .HasColumnName("orden");

                    b.Property<string>("TarifaBase")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tarifa_base");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("updated_by");

                    b.HasKey("ServicioId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_ContratistasServicios_Activo");

                    b.HasIndex("ContratistaId")
                        .HasDatabaseName("IX_ContratistasServicios_ContratistaId");

                    b.HasIndex("ContratistaId", "Activo", "Orden")
                        .HasDatabaseName("IX_ContratistasServicios_Contratista_Activo_Orden");

                    b.ToTable("Contratistas_Servicios", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Empleadores.Empleador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ofertanteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Experiencia")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("experiencia");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaPublicacion");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("foto");

                    b.Property<string>("Habilidades")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("habilidades");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("FechaPublicacion")
                        .HasDatabaseName("IX_Ofertantes_FechaPublicacion");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("IX_Ofertantes_UserID");

                    b.ToTable("Ofertantes", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Empleados.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("Alias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alias");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Apellido");

                    b.Property<string>("ContactoEmergencia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactoEmergencia");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<int?>("DiasPago")
                        .HasColumnType("int")
                        .HasColumnName("diasPago");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<int?>("EstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("estadoCivil");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaInicio");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaSalida");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("foto");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<bool>("InscritoTss")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("tss");

                    b.Property<decimal?>("MontoExtra1")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra1");

                    b.Property<decimal?>("MontoExtra2")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra2");

                    b.Property<decimal?>("MontoExtra3")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra3");

                    b.Property<string>("MotivoBaja")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("motivoBaja");

                    b.Property<string>("Municipio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("municipio");

                    b.Property<DateOnly?>("Nacimiento")
                        .HasColumnType("date")
                        .HasColumnName("nacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<int>("PeriodoPago")
                        .HasColumnType("int")
                        .HasColumnName("periodoPago");

                    b.Property<string>("Posicion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("posicion");

                    b.Property<decimal?>("Prestaciones")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("prestaciones");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("RemuneracionExtra1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra1");

                    b.Property<string>("RemuneracionExtra2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra2");

                    b.Property<string>("RemuneracionExtra3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra3");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("salario");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TelefonoEmergencia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefonoEmergencia");

                    b.Property<bool>("TieneContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("contrato");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Empleados_Activo");

                    b.HasIndex("Identificacion")
                        .HasDatabaseName("IX_Empleados_Identificacion");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Empleados_UserId");

                    b.HasIndex("UserId", "Activo")
                        .HasDatabaseName("IX_Empleados_UserId_Activo");

                    b.ToTable("Empleados", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Empleados.EmpleadoNota", b =>
                {
                    b.Property<int>("NotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotaId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("Eliminada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("eliminada");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nota");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("NotaId");

                    b.HasIndex("Eliminada")
                        .HasDatabaseName("IX_EmpleadosNotas_Eliminada");

                    b.HasIndex("EmpleadoId")
                        .HasDatabaseName("IX_EmpleadosNotas_EmpleadoId");

                    b.HasIndex("Fecha")
                        .HasDatabaseName("IX_EmpleadosNotas_Fecha");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_EmpleadosNotas_UserId");

                    b.HasIndex("EmpleadoId", "Eliminada")
                        .HasDatabaseName("IX_EmpleadosNotas_EmpleadoId_Eliminada");

                    b.ToTable("Empleados_Notas", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Empleados.EmpleadoTemporal", b =>
                {
                    b.Property<int>("ContratacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contratacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContratacionId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Alias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alias");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedulaRepresentante")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cedulaRepresentante");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("foto");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Municipio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("municipio");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("NombreRepresentante")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreRepresentante");

                    b.Property<string>("Provincia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("provincia");

                    b.Property<string>("Rnc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rnc");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("telefono2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("ContratacionId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_EmpleadosTemporales_Activo");

                    b.HasIndex("Identificacion")
                        .HasDatabaseName("IX_EmpleadosTemporales_Identificacion");

                    b.HasIndex("Rnc")
                        .HasDatabaseName("IX_EmpleadosTemporales_Rnc");

                    b.HasIndex("Tipo")
                        .HasDatabaseName("IX_EmpleadosTemporales_Tipo");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_EmpleadosTemporales_UserId");

                    b.HasIndex("UserId", "Activo")
                        .HasDatabaseName("IX_EmpleadosTemporales_UserId_Activo");

                    b.ToTable("Empleados_Temporales", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Nominas.DeduccionTss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activa");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("porcentaje");

                    b.Property<decimal?>("TopeSalarial")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("tope_salarial");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Activa")
                        .HasDatabaseName("IX_DeduccionesTss_Activa");

                    b.HasIndex("Descripcion")
                        .HasDatabaseName("IX_DeduccionesTss_Descripcion");

                    b.ToTable("Deducciones_TSS", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Nominas.ReciboDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detalleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("Concepto");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Monto");

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("orden");

                    b.Property<int>("PagoId")
                        .HasColumnType("int")
                        .HasColumnName("pagoID");

                    b.Property<int>("TipoConcepto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("tipo_concepto");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updated_by");

                    b.HasKey("DetalleId");

                    b.HasIndex("PagoId")
                        .HasDatabaseName("IX_ReciboDetalle_PagoId");

                    b.HasIndex("TipoConcepto")
                        .HasDatabaseName("IX_ReciboDetalle_TipoConcepto");

                    b.HasIndex("PagoId", "Orden")
                        .HasDatabaseName("IX_ReciboDetalle_PagoId_Orden");

                    b.ToTable("Empleador_Recibos_Detalle", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Nominas.ReciboHeader", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pagoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<string>("ConceptoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("conceptoPago");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("created_by");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaPago");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<decimal>("NetoPagar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(12, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("neto_pagar");

                    b.Property<DateOnly?>("PeriodoFin")
                        .HasColumnType("date")
                        .HasColumnName("periodo_fin");

                    b.Property<DateOnly?>("PeriodoInicio")
                        .HasColumnType("date")
                        .HasColumnName("periodo_inicio");

                    b.Property<int>("Tipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("tipo");

                    b.Property<decimal>("TotalDeducciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(12, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_deducciones");

                    b.Property<decimal>("TotalIngresos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(12, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("total_ingresos");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("PagoId");

                    b.HasIndex("EmpleadoId")
                        .HasDatabaseName("IX_ReciboHeader_EmpleadoId");

                    b.HasIndex("Estado")
                        .HasDatabaseName("IX_ReciboHeader_Estado");

                    b.HasIndex("FechaPago")
                        .HasDatabaseName("IX_ReciboHeader_FechaPago");

                    b.HasIndex("FechaRegistro")
                        .HasDatabaseName("IX_ReciboHeader_FechaRegistro");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ReciboHeader_UserId");

                    b.HasIndex("EmpleadoId", "FechaRegistro")
                        .HasDatabaseName("IX_ReciboHeader_EmpleadoId_FechaRegistro");

                    b.HasIndex("UserId", "Estado")
                        .HasDatabaseName("IX_ReciboHeader_UserId_Estado");

                    b.ToTable("Empleador_Recibos_Header", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Pagos.EmpleadorRecibosDetalleContratacione", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detalleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<string>("Concepto")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("Concepto");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Monto");

                    b.Property<int?>("PagoId")
                        .HasColumnType("int")
                        .HasColumnName("pagoID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetalleId");

                    b.HasIndex("Monto")
                        .HasDatabaseName("IX_EmpleadorRecibosDetalle_Monto");

                    b.HasIndex("PagoId")
                        .HasDatabaseName("IX_EmpleadorRecibosDetalle_PagoId");

                    b.ToTable("Empleador_Recibos_Detalle_Contrataciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Pagos.EmpleadorRecibosHeaderContratacione", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pagoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<string>("ConceptoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("conceptoPago");

                    b.Property<int?>("ContratacionId")
                        .HasColumnType("int")
                        .HasColumnName("contratacionID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaPago");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("PagoId");

                    b.HasIndex("ContratacionId")
                        .HasDatabaseName("IX_EmpleadorRecibosHeader_ContratacionId");

                    b.HasIndex("FechaPago")
                        .HasDatabaseName("IX_EmpleadorRecibosHeader_FechaPago");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_EmpleadorRecibosHeader_UserId");

                    b.HasIndex("UserId", "FechaPago")
                        .HasDatabaseName("IX_EmpleadorRecibosHeader_UserId_FechaPago");

                    b.ToTable("Empleador_Recibos_Header_Contrataciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Pagos.PaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activa");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<string>("MerchantId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("merchantID");

                    b.Property<bool>("ModoTest")
                        .HasColumnType("bit")
                        .HasColumnName("test");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("terminalID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UrlProduccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("productionURL");

                    b.Property<string>("UrlTest")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("testURL");

                    b.HasKey("Id");

                    b.HasIndex("Activa")
                        .HasDatabaseName("IX_PaymentGateway_Activa");

                    b.HasIndex("MerchantId")
                        .HasDatabaseName("IX_PaymentGateway_MerchantId");

                    b.HasIndex("ModoTest")
                        .HasDatabaseName("IX_PaymentGateway_ModoTest");

                    b.ToTable("PaymentGateway", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Pagos.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ventaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<string>("Comentario")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comentario");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<string>("DireccionIp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ip");

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("IdTransaccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("idTransaccion");

                    b.Property<string>("IdempotencyKey")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("idempotencyKey");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("metodo");

                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("planID");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("precio");

                    b.Property<string>("UltimosDigitosTarjeta")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("card");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("VentaId");

                    b.HasIndex("Estado")
                        .HasDatabaseName("IX_Ventas_Estado");

                    b.HasIndex("FechaTransaccion")
                        .HasDatabaseName("IX_Ventas_FechaTransaccion");

                    b.HasIndex("IdTransaccion")
                        .HasDatabaseName("IX_Ventas_IdTransaccion");

                    b.HasIndex("IdempotencyKey")
                        .IsUnique()
                        .HasDatabaseName("IX_Ventas_IdempotencyKey")
                        .HasFilter("[idempotencyKey] IS NOT NULL");

                    b.HasIndex("PlanId")
                        .HasDatabaseName("IX_Ventas_PlanId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Ventas_UserId");

                    b.HasIndex("UserId", "FechaTransaccion")
                        .HasDatabaseName("IX_Ventas_UserId_Fecha");

                    b.ToTable("Ventas", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Seguridad.Perfile", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("perfilID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Apellido");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.Property<string>("Usuario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuario");

                    b.HasKey("PerfilId");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Perfiles_Email");

                    b.HasIndex("Tipo")
                        .HasDatabaseName("IX_Perfiles_Tipo");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("UX_Perfiles_UserId");

                    b.HasIndex("Tipo", "FechaCreacion")
                        .HasDatabaseName("IX_Perfiles_Tipo_FechaCreacion");

                    b.ToTable("Perfiles", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Seguridad.PerfilesInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoGerente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellidoGerente");

                    b.Property<string>("CedulaGerente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cedulaGerente");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("created_by");

                    b.Property<string>("Direccion")
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("DireccionGerente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccionGerente");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fotoPerfil");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("NombreGerente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreGerente");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int")
                        .HasColumnName("perfilID");

                    b.Property<string>("Presentacion")
                        .HasColumnType("text")
                        .HasColumnName("presentacion");

                    b.Property<int?>("TipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("tipoIdentificacion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("Identificacion")
                        .HasDatabaseName("IX_PerfilesInfo_Identificacion");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("IX_PerfilesInfo_PerfilId");

                    b.HasIndex("TipoIdentificacion")
                        .HasDatabaseName("IX_PerfilesInfo_TipoIdentificacion");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("UX_PerfilesInfo_UserId");

                    b.HasIndex("UserId", "Identificacion")
                        .HasDatabaseName("IX_PerfilesInfo_UserId_Identificacion");

                    b.ToTable("perfilesInfo", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Seguridad.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Atributos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("atributos");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .IsUnicode(false)
                        .HasColumnType("varchar(450)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.HasIndex("Atributos")
                        .HasDatabaseName("IX_Permisos_Atributos");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("UX_Permisos_UserId");

                    b.ToTable("Permisos", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Suscripciones.PlanContratista", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("planID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<string>("NombrePlan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombrePlan");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.HasKey("PlanId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_PlanesContratistas_Activo");

                    b.HasIndex("NombrePlan")
                        .HasDatabaseName("IX_PlanesContratistas_NombrePlan");

                    b.HasIndex("Precio")
                        .HasDatabaseName("IX_PlanesContratistas_Precio");

                    b.ToTable("Planes_Contratistas", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Suscripciones.PlanEmpleador", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("planID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("created_by");

                    b.Property<bool>("IncluyeNomina")
                        .HasColumnType("bit")
                        .HasColumnName("nomina");

                    b.Property<int>("LimiteEmpleados")
                        .HasColumnType("int")
                        .HasColumnName("empleados");

                    b.Property<int>("MesesHistorico")
                        .HasColumnType("int")
                        .HasColumnName("historico");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("precio");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("updated_by");

                    b.HasKey("PlanId");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_PlanesEmpleadores_Activo");

                    b.HasIndex("Nombre")
                        .HasDatabaseName("IX_PlanesEmpleadores_Nombre");

                    b.HasIndex("Precio")
                        .HasDatabaseName("IX_PlanesEmpleadores_Precio");

                    b.ToTable("Planes_empleadores", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Suscripciones.Suscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("suscripcionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cancelada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("cancelada");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCancelacion");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaInicio");

                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("planID");

                    b.Property<string>("RazonCancelacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("razonCancelacion");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("vencimiento");

                    b.HasKey("Id");

                    b.HasIndex("Cancelada")
                        .HasDatabaseName("IX_Suscripciones_Cancelada");

                    b.HasIndex("PlanId")
                        .HasDatabaseName("IX_Suscripciones_PlanId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Suscripciones_UserId");

                    b.HasIndex("Vencimiento")
                        .HasDatabaseName("IX_Suscripciones_Vencimiento");

                    b.HasIndex("Cancelada", "Vencimiento")
                        .HasDatabaseName("IX_Suscripciones_Cancelada_Vencimiento");

                    b.HasIndex("UserId", "Vencimiento")
                        .HasDatabaseName("IX_Suscripciones_UserId_Vencimiento");

                    b.ToTable("Suscripciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaCalificacion", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CalificacionId")
                        .HasColumnType("int")
                        .HasColumnName("calificacionID");

                    b.Property<int?>("Conocimientos")
                        .HasColumnType("int")
                        .HasColumnName("conocimientos");

                    b.Property<int?>("Cumplimiento")
                        .HasColumnType("int")
                        .HasColumnName("cumplimiento");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Expr1")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Expr2")
                        .HasColumnType("int");

                    b.Property<string>("Expr3")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int")
                        .HasColumnName("perfilID");

                    b.Property<int?>("Puntualidad")
                        .HasColumnType("int")
                        .HasColumnName("puntualidad");

                    b.Property<int?>("Recomendacion")
                        .HasColumnType("int")
                        .HasColumnName("recomendacion");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<string>("Tipo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo");

                    b.Property<string>("UserId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.Property<string>("Usuario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuario");

                    b.ToTable((string)null);

                    b.ToView("VCalificaciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaContratacionTemporal", b =>
                {
                    b.Property<string>("Alias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alias");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("ComposicionId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("composicionID");

                    b.Property<string>("ComposicionNombre")
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)")
                        .HasColumnName("composicionNombre");

                    b.Property<int?>("Conocimientos")
                        .HasColumnType("int")
                        .HasColumnName("conocimientos");

                    b.Property<int>("ContratacionId")
                        .HasColumnType("int")
                        .HasColumnName("contratacionID");

                    b.Property<int?>("Cumplimiento")
                        .HasColumnType("int")
                        .HasColumnName("cumplimiento");

                    b.Property<string>("DescripcionAmpliada")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcionAmpliada");

                    b.Property<string>("DescripcionCorta")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("descripcionCorta");

                    b.Property<int>("DetalleId")
                        .HasColumnType("int")
                        .HasColumnName("detalleID");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<string>("EsquemaPagos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("esquemaPagos");

                    b.Property<int?>("Estatus")
                        .HasColumnType("int")
                        .HasColumnName("estatus");

                    b.Property<int?>("Expr1")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaFinal")
                        .HasColumnType("date")
                        .HasColumnName("fechaFinal");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaInicio");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<decimal?>("MontoAcordado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoAcordado");

                    b.Property<string>("Municipio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("municipio");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("Provincia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("provincia");

                    b.Property<int?>("Puntualidad")
                        .HasColumnType("int")
                        .HasColumnName("puntualidad");

                    b.Property<int?>("Recomendacion")
                        .HasColumnType("int")
                        .HasColumnName("recomendacion");

                    b.Property<string>("Rnc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rnc");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("telefono2");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("userID");

                    b.ToTable((string)null);

                    b.ToView("VContratacionesTemporales", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaContratista", b =>
                {
                    b.Property<bool?>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Calificacion")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("calificacion");

                    b.Property<int>("ContratistaId")
                        .HasColumnType("int")
                        .HasColumnName("contratistaID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("Experiencia")
                        .HasColumnType("int")
                        .HasColumnName("experiencia");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaIngreso");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("imagenURL");

                    b.Property<bool?>("NivelNacional")
                        .HasColumnType("bit")
                        .HasColumnName("nivelNacional");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("presentacion");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("Sector")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("sector");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<string>("Titulo")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("titulo");

                    b.Property<int>("TotalRegistros")
                        .HasColumnType("int")
                        .HasColumnName("total_registros");

                    b.Property<string>("UserId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("userID");

                    b.Property<bool?>("Whatsapp1")
                        .HasColumnType("bit")
                        .HasColumnName("whatsapp1");

                    b.Property<bool?>("Whatsapp2")
                        .HasColumnType("bit")
                        .HasColumnName("whatsapp2");

                    b.ToTable((string)null);

                    b.ToView("VContratistas", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaEmpleado", b =>
                {
                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Alias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alias");

                    b.Property<string>("ContactoEmergencia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactoEmergencia");

                    b.Property<bool?>("Contrato")
                        .HasColumnType("bit")
                        .HasColumnName("contrato");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    b.Property<int?>("EstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("estadoCivil");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaInicio");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<decimal?>("MontoExtra1")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra1");

                    b.Property<decimal?>("MontoExtra2")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra2");

                    b.Property<decimal?>("MontoExtra3")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra3");

                    b.Property<string>("Municipio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("municipio");

                    b.Property<DateOnly?>("Nacimiento")
                        .HasColumnType("date")
                        .HasColumnName("nacimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)");

                    b.Property<int?>("PeriodoPago")
                        .HasColumnType("int")
                        .HasColumnName("periodoPago");

                    b.Property<string>("Posicion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("posicion");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("RemuneracionExtra1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra1");

                    b.Property<string>("RemuneracionExtra2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra2");

                    b.Property<string>("RemuneracionExtra3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra3");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("salario");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TelefonoEmergencia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefonoEmergencia");

                    b.Property<bool?>("Tss")
                        .HasColumnType("bit")
                        .HasColumnName("tss");

                    b.Property<string>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userID");

                    b.ToTable((string)null);

                    b.ToView("VEmpleados", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaPago", b =>
                {
                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    b.Property<string>("Expr1")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaPago");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PagoId")
                        .HasColumnType("int")
                        .HasColumnName("pagoID");

                    b.Property<string>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userID");

                    b.ToTable((string)null);

                    b.ToView("VPagos", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaPagoContratacion", b =>
                {
                    b.Property<int?>("ContratacionId")
                        .HasColumnType("int")
                        .HasColumnName("contratacionID");

                    b.Property<string>("Expr1")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaPago");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PagoId")
                        .HasColumnType("int")
                        .HasColumnName("pagoID");

                    b.Property<string>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userID");

                    b.ToTable((string)null);

                    b.ToView("VPagosContrataciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaPerfil", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApellidoGerente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellidoGerente");

                    b.Property<string>("CedulaGerente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cedulaGerente");

                    b.Property<string>("Direccion")
                        .HasColumnType("text")
                        .HasColumnName("direccion");

                    b.Property<string>("DireccionGerente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccionGerente");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCreacion");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fotoPerfil");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreComercial");

                    b.Property<string>("NombreGerente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreGerente");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int")
                        .HasColumnName("perfilID");

                    b.Property<string>("Presentacion")
                        .HasColumnType("text")
                        .HasColumnName("presentacion");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("tipoIdentificacion");

                    b.Property<string>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userID");

                    b.Property<string>("Usuario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuario");

                    b.ToTable((string)null);

                    b.ToView("VPerfiles", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaPromedioCalificacion", b =>
                {
                    b.Property<decimal?>("CalificacionPromedio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("calificacion_promedio");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<int?>("TotalRegistros")
                        .HasColumnType("int")
                        .HasColumnName("total_registros");

                    b.ToTable((string)null);

                    b.ToView("VPromedioCalificacion", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.ReadModels.VistaSuscripcion", b =>
                {
                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaInicio");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("planID");

                    b.Property<DateTime?>("ProximoPago")
                        .HasColumnType("datetime");

                    b.Property<int>("SuscripcionId")
                        .HasColumnType("int")
                        .HasColumnName("suscripcionID");

                    b.Property<string>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userID");

                    b.Property<DateOnly?>("Vencimiento")
                        .HasColumnType("date")
                        .HasColumnName("vencimiento");

                    b.ToTable((string)null);

                    b.ToView("VSuscripciones", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("VencimientoPlan")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReplacedByToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasDatabaseName("IX_RefreshTokens_Token");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Persistence.Entities.Generated.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Alias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alias");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactoEmergencia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contactoEmergencia");

                    b.Property<bool?>("Contrato")
                        .HasColumnType("bit")
                        .HasColumnName("contrato");

                    b.Property<int?>("DiasPago")
                        .HasColumnType("int")
                        .HasColumnName("diasPago");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<int?>("EstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("estadoCivil");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fechaInicio");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaSalida");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("foto");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identificacion");

                    b.Property<decimal?>("MontoExtra1")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra1");

                    b.Property<decimal?>("MontoExtra2")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra2");

                    b.Property<decimal?>("MontoExtra3")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoExtra3");

                    b.Property<string>("MotivoBaja")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("motivoBaja");

                    b.Property<string>("Municipio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("municipio");

                    b.Property<DateOnly?>("Nacimiento")
                        .HasColumnType("date")
                        .HasColumnName("nacimiento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PeriodoPago")
                        .HasColumnType("int")
                        .HasColumnName("periodoPago");

                    b.Property<string>("Posicion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("posicion");

                    b.Property<decimal?>("Prestaciones")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("prestaciones");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("RemuneracionExtra1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra1");

                    b.Property<string>("RemuneracionExtra2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra2");

                    b.Property<string>("RemuneracionExtra3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remuneracionExtra3");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("salario");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TelefonoEmergencia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefonoEmergencia");

                    b.Property<bool?>("Tss")
                        .HasColumnType("bit")
                        .HasColumnName("tss");

                    b.Property<string>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("userID");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Persistence.Entities.Generated.Remuneracione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("empleadoID");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("monto");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("userID");

                    b.HasKey("Id")
                        .HasName("PK_Remuneraciones");

                    b.HasIndex(new[] { "EmpleadoId" }, "IX_Remuneraciones_EmpleadoId");

                    b.HasIndex(new[] { "UserId" }, "IX_Remuneraciones_UserId");

                    b.ToTable("Remuneraciones", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Calificaciones.Calificacion", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Authentication.Credencial", null)
                        .WithMany()
                        .HasForeignKey("EmpleadorUserId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Calificaciones_Credenciales_Empleador");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contrataciones.DetalleContratacion", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Empleados.EmpleadoTemporal", null)
                        .WithMany()
                        .HasForeignKey("ContratacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DetalleContrataciones_EmpleadosTemporales");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contratistas.Contratista", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Authentication.Credencial", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Contratistas_Credenciales");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contratistas.ContratistaFoto", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Contratistas.Contratista", null)
                        .WithMany()
                        .HasForeignKey("ContratistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Contratistas_Fotos_Contratistas");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Contratistas.ContratistaServicio", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Contratistas.Contratista", null)
                        .WithMany()
                        .HasForeignKey("ContratistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Contratistas_Servicios_Contratistas");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Empleadores.Empleador", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Authentication.Credencial", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ofertantes_Credenciales");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Nominas.ReciboDetalle", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Nominas.ReciboHeader", null)
                        .WithMany()
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Nominas.ReciboHeader", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Empleados.Empleado", null)
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Empleador_Recibos_Header_Empleados");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Pagos.EmpleadorRecibosDetalleContratacione", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Pagos.EmpleadorRecibosHeaderContratacione", null)
                        .WithMany()
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Empleador_Recibos_Detalle_Contrataciones_Empleador_Recibos_Header_Contrataciones");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Pagos.EmpleadorRecibosHeaderContratacione", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Empleados.EmpleadoTemporal", null)
                        .WithMany()
                        .HasForeignKey("ContratacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Empleador_Recibos_Header_Contrataciones_EmpleadosTemporales");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Seguridad.PerfilesInfo", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Seguridad.Perfile", null)
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_perfilesInfo_Perfiles");
                });

            modelBuilder.Entity("MiGenteEnLinea.Domain.Entities.Suscripciones.Suscripcion", b =>
                {
                    b.HasOne("MiGenteEnLinea.Domain.Entities.Suscripciones.PlanEmpleador", null)
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Suscripciones_Planes_empleadores");

                    b.HasOne("MiGenteEnLinea.Domain.Entities.Authentication.Credencial", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Suscripciones_Credenciales");
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.HasOne("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RefreshTokens_AspNetUsers_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Persistence.Entities.Generated.Remuneracione", b =>
                {
                    b.HasOne("MiGenteEnLinea.Infrastructure.Persistence.Entities.Generated.Empleado", "Empleado")
                        .WithMany("Remuneraciones")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Remuneraciones_Empleados");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("MiGenteEnLinea.Infrastructure.Persistence.Entities.Generated.Empleado", b =>
                {
                    b.Navigation("Remuneraciones");
                });
#pragma warning restore 612, 618
        }
    }
}
